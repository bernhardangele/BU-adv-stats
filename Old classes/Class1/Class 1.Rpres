Lecture 1: Foundations of Advanced Statistics
==================================================================================
author: Bernhard Angele
date: 22 September 2016

What is advanced about these statistics?
========================================================

- Goal is for you to understand the principles, not just the steps.
- Simulation approach:
  - If you don't know how something about a statistical test, simulate it!
  - Example questions you might ask:
    - What is the power of this test?
    - What happens if I violate the normality assumption for an ANOVA?
    - What happens if I don't correct for multiple comparisons?
  

How do I run simulations?
========================================================
- Not very easy in SPSS
- But Excel can help (to some degree..)
- For more detailed simulations, you'll have to use a programming language such as R, Python, C++, etc.

Introduction
========================================================
- Let's start with a quick review of some of the maths foundations you just encountered on the test.
- Then I will give you a problem to solve in groups. Be warned, it's a fairly big one!

Maths basics: Variable names
========================================================
- A variable like $x$ can stand for a single number, but also multiple numbers joined together in arrays.
- One very common convention is to use roman letters (e.g. $a$, $b$) for values that are known or determined by the data and greek letters (e.g. $\alpha$, $\beta$) for theoretical parameter values that have to be estimated and cannot be directly measured.

Maths basics: Order of operations
========================================================
- Remember PEMDAS
  - Parentheses, Exponents, Multiply/Divide, Add/Subtract
  - For Multiply/Divide and Add/Subtract, go from left to right
- Example:
$$
\begin{aligned}
(2+3)^2 \cdot 5 + 6 \cdot 7 \\
= 6^2 \cdot 5 + 42 \\
= 36 \cdot 5 + 42 \\
= 180 + 42 \\
= 222
\end{aligned}
$$

Maths basics: Arrays
=========================================================
- For statistics, it can be useful to organise numbers in arrays
  - For example, these could be all the measurements in an experiment:
$$\left(\begin{array}{}
    2.3 & 4.5 & 6.8 & 1.3 & 7.5 & 8.6
    \end{array}\right)$$
  - Let's call the array *x*. It's a useful convention to use *boldface* for arrays
  - If we want to talk about a specific element of our array, we can use subscripts:
  $$\textbf{x} = \left(\begin{array}{} 
                  x_{1} & x_{2} & x_{3} & x_{4} & x_{5} & x_{6}
                  \end{array}\right)$$

Maths basics: Vectors and Matrices
=========================================================
- An array with one dimension is called a *vector*
- An array with more dimensions than one is called a *matrix*. By convention, matrices often have uppercase variable names.
  - Sometimes it can be useful to organise experiment data in a matrix, for example if you have multiple conditions
$$\textbf{X} = \left(\begin{array}{}
    2.3 & 4.5 & 6.8 \\
    1.3 & 7.5 & 8.6 \\
    6.6 & 7.2 & 1.2 
    \end{array}\right)$$
- If we want to talk about a specific element of our matrix, we can use *double* subscripts: rows first, columns second:
  $$\textbf{X} = \left(\begin{array}{} 
                  x_{11} & x_{12} & x_{13} \\
                  x_{21} & x_{22} & x_{23} \\
                  x_{31} & x_{32} & x_{33}
                  \end{array}\right)$$


Maths basics: Summation
========================================================
- The summation operator $\Sigma$:
$$x_1 + x_2 + x_3 + x_4 + x_5 = \sum\limits_{i=1}^5{x_i}$$
- This means: beginning with $i=1$ and ending with $i=5$ sum over the variables $x_i$.
    - This can save a lot of space if you are summing over lots of variables
    - $i$ is called the *index* over which you are summing, and $1$ and $5$ are the limits.
- If the limits are clear from the context, you can also write this as

$$\sum\limits_{i}{x_i}$$

Maths basics: Summation (2)
========================================================
- You can have multiple multiple indices and sum over them (e.g. if you have multiple people in multiple groups, which is something that happens in Psychology *ALL THE TIME*). For example:

Group 1 (females): $x_{11},  x_{12},  x_{13},  x_{14}$

Group 2 (males):  $x_{21},  x_{22},  x_{23},  x_{24}$

Sum of all the individuals in all the groups:

$$
\begin{aligned}
\sum\limits_{m=1}^{2}\sum\limits_{i=1}^{4}{x_{mi}} = x_{11}+x_{12}+x_{13}+x_{14} \\
  + x_{21} + x_{22} + x_{23} + x_{24}
\end{aligned}
$$

Maths basics: Multiplication
========================================================
- The product operator $\Pi$:
- Works just like the sum operator:
$$x_1 \cdot x_2 \cdot x_3 \cdot x_4 \cdot x_5 = \prod\limits_{i=1}^5{x_i}$$
- This means: beginning with $i=1$ and ending with $i=5$ calculate the product over the variables $x_i$.

$$
\begin{aligned}
\prod\limits_{m=1}^{2}\prod\limits_{i=1}^{4}{x_{mi}} = x_{11}\cdot x_{12}\cdot x_{13}\cdot x_{14} \\
  \cdot x_{21} \cdot x_{22} \cdot x_{23} \cdot x_{24}
\end{aligned}
$$

Maths basics: Functions
========================================================
- A function is essentially a mapping between an input and an output.
  - For example, for every input $x$ the function $f(x) = 2x$ defines an output, which is exactly twice the value of the input $x$.
- You can plot functions by putting the output $f(x)$ on the y-axis and the input $x$ on the x-axis:
```{r, echo=FALSE}
f <- function(x) 2*x
plot(f, from = -5, to = 5, ylab = "f(x)", main = "f(x) = 2x", axes = "FALSE")
grid(col = "lightgray", lty = "dotted",
     lwd = par("lwd"), equilogs = TRUE)
axis(1, pos = 0, at = -5:5)
axis(2, pos = 0, at = seq(from = -10, to = 10, by = 2))
```

Maths basics: Linear functions
========================================================
- Often, we write y instead of f(x) (since it's plotted on the y-axis)
- Linear functions have the form $y = ax + b$, where $a$ is called the *slope* and $b$ is called the intercept.
- The slope determines how "steep" the line is and the intercept determines where it crosses the x=axis

```{r, echo=FALSE}
f <- function(x) 1.5*x + 1
plot(f, from = -5, to = 5, ylab = "y", main = "y = 1.5x + 1", axes = FALSE)
grid(col = "lightgray", lty = "dotted",
     lwd = par("lwd"), equilogs = TRUE)
axis(1, pos = 0, at = -5:5)
axis(2, pos = 0, at = seq(from = -10, to = 10, by = 2))
```

Maths basics: Nonlinear functions
=========================================================
- Functions do not necessarily have to be linear.

```{r, echo=FALSE}
f <- function(x) 1.5*x^2 + 1
plot(f, from = -5, to = 5, ylab = "y", main = "y = 1.5x^2 + 1", axes = FALSE)
grid(col = "lightgray", lty = "dotted",
     lwd = par("lwd"), equilogs = TRUE)
axis(1, pos = 0, at = -5:5)
axis(2, pos = 0, at = seq(from = 0, to = 25, by = 2))
```

Maths basics: Nonlinear functions
=========================================================
- Do you know this function?
$$f(x) = \frac{e^{- \frac{\scriptscriptstyle 1}{\scriptscriptstyle 2} x^2}}{\sqrt{2\pi}}$$

```{r, echo=FALSE}
plot(dnorm, from = -5, to = 5, ylab = "y", axes = FALSE)
grid(col = "lightgray", lty = "dotted",
     lwd = par("lwd"), equilogs = TRUE)
axis(1, pos = 0, at = -5:5)
axis(2, pos = 0, at = seq(from = 0, to = 1, by = 0.1))
```